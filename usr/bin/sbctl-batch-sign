#!/usr/bin/env bash

# sbctl-batch-sign is a helper script designed to make it easier for users to sign files needed for secure boot support.
# The obvious case in which this script helps a lot is when dual booting Windows as there are a lot of files by Windows that
# needs to be signed in EFI.

if [ "$(id -u)" -ne 0 ]; then
  echo "Error: This script must be run with root privileges."
  exit 1
fi

if [ "$#" -eq 0 ]; then
    sbctl_files="$(sbctl verify 2>/dev/null | awk '/âœ—/ {print $2}')"
    vmlinuz_files="$(find /boot -maxdepth 1 -type f -name "vmlinuz*" 2>/dev/null)"
    entries=""
    [[ -n "$sbctl_files" ]] && entries+="$sbctl_files"
    [[ -n "$sbctl_files" && -n "$vmlinuz_files" ]] && entries+="\n"
    [[ -n "$vmlinuz_files" ]] && entries+="$vmlinuz_files"

    echo -en "${entries}" | sort -u | while IFS= read -r entry; do
        # We expect users who use this script to enroll their
        # own keys alongside Microsoft's.
        # With that in mind, there's no need to sign MS ESP
        # files with our own keys.
        if [[ "$entry" =~ ^.*/EFI/(Microsoft|Windows) || "$entry" == *.mui || "$entry" == *.dll ]]; then
            continue
        fi
        sbctl sign -s "$entry"
    done
fi
